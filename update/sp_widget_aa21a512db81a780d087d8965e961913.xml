<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(cabrillo, $http, $location, $scope) {
	/* widget controller */
	var c = this;
	//Captures current user's first name
	c.currentUser = $scope.user.first_name;
	//Used to determine if in the mobile app or not
	c.isNative = cabrillo.isNative();
	//c.serialNumber = "";
	//Show/hide Manual Entry Button/Input form
	c.showForm = false;
	//Show/hide main Inventory page
	c.showHomeButtons = true;
	//c.itemDetails = '';
	//c.stockroom = '';
	//Set to true or false based on if there is an error
	c.error = false;
	//Holds the error message if there is an error
	c.errorMessage = "";
	//Show/hide the dropdown on the manual search
	c.emptySearch = false;
	//Stockroom chosed from manual list
	c.stockroomSelected = false;
	//Show Requests list
	c.showRequests = false;
	c.warehouseTasksLoaded = false;
	
	//Click the Scan Bin button and bring up the camera to scan the stockroom
	c.scanBin = function(todo){
		cabrillo.camera.getBarcode().then(function(barcode) {
			if (barcode){
				//If a barcode is found, call the API to get the stockroom data
				getStockroomById(barcode);
				//Append a hash to the URL
				var binScannedHash = $location.hash("bin-scanned");
			}else{
				c.error = true;
				c.errorMessage = "Try Again";
			}
		}, function(error) {
			c.error = true;
			c.errorMessage = "Unable to scan.";
		})
	};
	
	//Show the Manual Bin Input and button form when click on "Choose a Bin" button
	c.showBinInput = function(){
		//Show the input field and label
		c.showForm = true;
		//Hide error message if already loaded
		c.error = false;
	};
	
	//Search the stockrooms by the entry in the input field for the Manual Bin Search.
	//This is called in an ng-change, so once the user types in a character, it searches through the stockrooms for a match on the Stockroom/Bin name
	c.searchStockrooms = function(stockroomName){
		//Check to see if user has typed into the input
		if (stockroomName.length === 0){
			c.emptySearch = true;
			c.stockroomSelected = false;
		} else if (stockroomName.length >= 1) {
			//If entry in input, get the Stockrooms by their name
			c.emptySearch = false;
			getStockrooms(stockroomName);
		} 
	}
	
	//Submit manually selected bin through the input field
	c.submitBin = function(){
		//Check to see if the assignment group is empty
		if (!c.stockroomAssignmentGroup){
			c.error = true;
			c.errorMessage = 'There is no assignment group assigned to your warehouse. Unable to look up PC Deployment requests.';
		} else {
			c.showHomeButtons = false;
			c.showRequests = true;
			getWarehouseTasks(c.stockroomAssignmentGroup);
			var binSubmittedHash = $location.hash("bin-scanned");
		}
	};
	
	//Once the user clicks on/selects a specific stockroom, save that stockroom's name and sysId and close the dropdown
	c.selectStockroom = function(stockroom){
		c.stockroomName = stockroom.name;
		c.stockroomSysId = stockroom.sysId;
		c.stockroomAssignmentGroup = stockroom.assignmentGroup;
		c.stockroomSelected = true;
	}
	
	//When the user clicks on View Bin Items button, take them to the Inventory Information widget for the selected stockroom
	c.viewBinItems = function(stockroomSysId, stockroomName){
		window.location.href = '/asset_scan?id=inventory_information&stockroom=' + stockroomSysId + '&stockroomName=' + stockroomName;

	}
	
	//Get additional details on the clicked request
	c.viewRequestedItemDetails = function(task){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getRequestTaskDetails/' + task,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.request = response.data.result;
				console.log(c.request);
			} else {
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find that request.";
		});
	}
	
	//Get all the stockrooms. Uses the getAllStockrooms scripted REST API.
	function getStockrooms(stockroomName) {
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/' + stockroomName + '/central',
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.stockrooms = response.data.result;
				c.stockroomAssignmentGroup = response.data.result.assignmentGroup;
			}else{
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find that stockroom.";
		});
	}
	
	//Get the stockroom by the stockroom sysId. Called above in the c.scanBin function.
	//Calls getStockroomById scripted REST API.
	function getStockroomById(stockroomSysId) {
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getStockroomInfo/' + stockroomSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.stockroomInfo = response.data.result;
				if (c.stockroomInfo.type !== 'Central Warehouse'){
					c.error = true;
					c.errorMessage = 'You must scan a Central Warehouse to get PC Deployment tasks.';
				} else {
					c.stockroomName = response.data.result.name;
					c.stockroomSysId = response.data.result.sysId;
					c.stockroomAssignmentGroup = response.data.result.assignmentGroup;
					c.showHomeButtons = false;
					c.showRequests = true;
				}
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find that stockroom.";
			c.showHomeButtons = true;
		});
	}
	
	/*c.currentPage = 0;
		c.pageSize = 20;
		var pagesArray = [];
	
	function noOfPages(records){
		var pages = Math.ceil(records.length/20);
		console.log(pages);
	}*/

	//Get all the open or WIP sc_task records for the warehouse's assignment group starting with PC Delivery and has PC Deployment RITM
	function getWarehouseTasks(assignmentGroup){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getWarehouseRequestedItems/' + assignmentGroup,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if (response.statusText === 'OK'){
				c.warehouseTasks = response.data.result;
					//noOfPages(c.warehouseTasks);
				c.warehouseTasksLoaded = true;
			} else {
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
				c.error = true;
				c.errorMessage = "Unable to find that stockroom.";
				c.showHomeButtons = true;
				c.showRequests = false;
			});
	}
	
	
	
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>//General Buttons Styling

button {
  font-size: 20px;
  border: none;
}

.button-icon {
  display: block;
  margin: 0 auto;
}

.white-button {
  background-color: #ffffff;
  border: 1px solid #717171;
}

//Errors
.error-message {
  z-index: 999;
  margin-top: 10px;
  position: absolute;
}

//Title
.pc-deployment-home {
  background: linear-gradient(#A9A9A9 150px, 150px, #FFFFFF);
  height: 150vh;
  width: 100%;
}

.pc-deployment-title {
	padding: 20px; 
  text-align: center;
  color: #ffffff;
}

.pc-deployment-screen-row {
  margin: 0 auto;
  padding: 10px;
}


//Start Scanning Button
.start-scanning-button {
  height: 150px;
  border: 1px solid #717171;
  background-color: #ffffff;
}

#barcode-icon {
  height: 75px;
}

//Manual Entry
.choose-bin {
	padding: 0;
  border: 1px solid #717171;
  border-radius: 5px;
}

.bin-freeform-btn {
	padding: 0;
  height: 90px;
}

.bin-freeform-btn:hover {
  background-color: #ffffff;
}

#binAdd {
	padding-top: 30px;
}

.bin-freeform-btn-text {
  font-size: 18px;
  color: #717171;
}

.bin-freeform-btn-text:hover {
  color: black;
}

.bin-green-arrow {
  font-size: 18px;
	background-color: #1ed760;
  height: 90px;
  overflow: hidden;
  color: #fff;
  padding-top: 30px;
  border-radius: 0 5px 5px 0;
}

.bin-search {
  padding: 0;
  border: 1px solid #717171;
  border-radius: 5px;
}

//Warehouse Search
.stockroom-search {
  height: 90px;
  border-radius: 5px 0 0 5px;
  border: none;
}

//Stockroom submit
#binSubmitContainer {
  border-radius: 0 5px 5px 0;
  text-align: center;
}

.search-item-container {
  max-height: 250px;
  overflow-y: scroll;
  padding: 0px;
  margin-bottom: 50px;
}

.search-item {
  padding: 5px 10px !important;
  height: 50px;
  line-height: 3;
}

.search-item:hover {
  background-color: #00B2EE;
  color: #ffffff;
}


//Spinner
.spinner {
  text-align: center;
  padding: 24px;
}

//Requests Tab
.request-block {
	padding: 15px 20px;
}

.request-number {
	padding: 0 0 10px 0;
  font-size: 16px;
  font-weight: bold;
}

.request-title {
	font-weight: bold;
}

.requests-details {
  display: flex;
  align-items: center;
}

//Home Nav
.navbar {
	min-height: 0 !important;  
}

.bottom-nav {
	background-color: #fff;
  border-top: 1px solid #ccc;
  height: 10px;
}

.navbar-fixed-bottom {
	height: 40px;
}

.bottom-nav ul {
	padding: 0;
}

.bottom-nav li {
	padding: 0;
}

.home-menu {
  position: absolute;
  bottom: 0;
}

.navbar-nav {
  margin: 0 !important;
}

.navbar-nav li a {
 line-height: 15px !important; 
 padding: 5px 0 !important;
}


</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>pc_deployment</id>
        <internal>false</internal>
        <link/>
        <name>PC Deployment</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {  /* populate the 'data' object */  /* e.g., data.table = $sp.getValue('table'); */})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>212606938</sys_created_by>
        <sys_created_on>2018-10-11 18:29:48</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>aa21a512db81a780d087d8965e961913</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name>PC Deployment</sys_name>
        <sys_package display_value="Asset Scanning" source="x_gege9_asset_scan">7be151dddbe55700d087d8965e9619c8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asset Scanning">7be151dddbe55700d087d8965e9619c8</sys_scope>
        <sys_update_name>sp_widget_aa21a512db81a780d087d8965e961913</sys_update_name>
        <sys_updated_by>212606938</sys_updated_by>
        <sys_updated_on>2018-10-15 20:05:43</sys_updated_on>
        <template><![CDATA[<!-- PC Deployment Homepage -->
<div id="home-screen">
  <div class="container-fluid">
    <div class="row">
      
      <!-- Error Message -->
      <div class="alert alert-danger col-xs-8 col-xs-offset-2 error-message" ng-show="c.error">
        {{c.errorMessage}}
      </div>
      
      <!-- PC Deployment Homepage Title and Buttons -->
      <div ng-show="c.showHomeButtons" class="pc-deployment-home">
        <div class="pc-deployment-title">
          <h3>PC Deployment</h3>
          <h4>Scan or type the Central Warehouse at your location to continue.</h4>
        </div>
        <div>
          <div class="row pc-deployment-screen-row" id="scan-button-row">
            <button class="btn col-xs-8 col-xs-offset-2 start-scanning-button" ng-click="c.scanBin()">
              <img class="button-icon" id="barcode-icon" src="barcode-icon.png" />Scan Depot
            </button>
          </div>
          <div class="row pc-deployment-screen-row manual-button-row">
            <div class="col-xs-8 col-xs-offset-2 choose-bin" ng-click="c.showBinInput()" ng-hide="c.showForm">
              <button class="btn btn-default col-xs-12 bin-freeform-btn">
                <div id="binAdd" class="col-xs-10 bin-freeform-btn-text">
                  Manually Enter Depot
                </div>
                <div class="col-xs-2 bin-green-arrow">
                  <i class="glyphicon glyphicon-chevron-right"></i>
                </div>
              </button>
            </div>
            <div class="col-xs-8 col-xs-offset-2 bin-search" ng-show="c.showForm">
              <input class="col-xs-10 stockroom-search" type="text" list="stockrooms" 
                     placeholder="Type bin name here" ng-change="c.searchStockrooms(c.stockroomName)" 
                     ng-model="c.stockroomName" />
              <div id="binSubmitContainer" class="col-xs-2 bin-green-arrow" ng-click="c.stockroomSelected && c.submitBin()">
                <i class="glyphicon glyphicon-chevron-down" ng-hide="c.stockroomSelected"></i>
                <i class="glyphicon glyphicon-chevron-right" ng-show="c.stockroomSelected"></i>
              </div>
            </div>
            <div class="col-xs-8 col-xs-offset-2 search-item-container" ng-hide="c.stockroomSelected">
              <li class="list-group-item search-item" ng-repeat="stockroom in c.stockrooms | limitTo: 20 | orderBy: 'name'" 
                  ng-hide="c.emptySearch" ng-click="c.selectStockroom(stockroom)">{{stockroom.name}}</li>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Requests -->
      <div class="col-xs-12  text-center">
        <h3>
          {{c.stockroomName}} PC Deployment Tasks
        </h3>
      </div>
      
      <div class="spinner" ng-hide="c.warehouseTasksLoaded">
        <h3>
          Getting Tasks from ServiceNow...
        </h3>
        <i class="fa fa-spinner fa-4x fa-pulse"></i>
      </div>
      
      <div class="request-block col-xs-12" ng-show="c.showRequests" ng-repeat="task in c.warehouseTasks | orderBy: 'created'">
        <div class="col-xs-12 request-number">
           {{task.number}}
        </div>
        <div class="col-xs-12 request-details">
          <div class="col-xs-8">
            <span class="col-xs-6 request-title">Created:</span>
            <span class="col-xs-6">{{task.created}}</span>
          </div>
          <div class="col-xs-8">
            <span class="col-xs-6 request-title">On Behalf of:</span>
            <span class="col-xs-6">{{task.onBehalfOf}}</span>
          </div>
          <div class="col-xs-8">
            <span class="col-xs-6 request-title">Assigned to:</span>
            <span class="col-xs-6">{{task.assignedTo}}</span>
          </div>
          <div class="col-xs-4">
						<a ng-click="c.viewRequestedItemDetails(task.number)" class="btn btn-default center-block"> ASSIGN PC </a>
          </div>
        </div>
      </div>
      
      

    </div>
  </div>
</div>

<!-- Home Nav -->
<div class="navbar navbar-fixed-bottom bottom-nav">
  <div class="container-fluid">
    <ul class="nav navbar-nav col-xs-12">
      <li class="text-center center-block col-xs-12">
        <a class="home-link" href="/asset_scan"><i class="glyphicon glyphicon-home"></i>
          <p>
            Home
          </p>
        </a>
      </li>
    </ul>
  </div>
  <!--<button ng-show="c.loaded" class="col-xs-12 btn btn-primary" ng-click="c.navigate('asset_scan')">Back to Scan</button>-->
</div>

<!-- Show if not in native mobile app -->
<div ng-hide="c.isNative">
  <p>You must be in the ServiceNow mobile app.</p>
</div>]]></template>
    </sp_widget>
</record_update>
