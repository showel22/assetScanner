<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($location, $http, cabrillo, $scope) {
  /* widget controller */
  var c = this;
	c.loaded = true;
	c.error = false;
	c.stockroomName = '';
	c.inventoryCheck = '';
	c.scanAnother = false;
	c.scanStarted = false;
	c.manualEntryClicked = false;
	c.assetCorrect = false;
	//c.showStartForm = false;
	c.hideManualInput = true;
	c.hideEntireStartForm = false;
	c.inventoryCheckComplete = false;
	c.inventoryCheckCreator = '';
	
	
	c.getParameterByName = function(param) {
		return $location.search()[param];
	};
	
	c.startInventoryScan = function(){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/createInventory/' + c.stockroomSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.loaded = false;
				c.inventoryCheck = response.data.result.sys_id;
				console.log(c.inventoryCheck.sys_created_by);
				cabrillo.camera.getBarcode().then(function(barcode) {
					if (barcode){
						c.loaded = true;
						c.scanAnother = true;
						c.hideManualInput = true;
						c.getAsset(barcode);
					}else{
						c.error = true;
						c.errorMessage = "Try Again";
					}
				}, function(error) {
					c.error = true;
					c.errorMessage = "Unable to scan.";
				})
			}
		});
	}
	
	c.openManualInventoryForm = function(){
		c.manualEntryClicked = true;
		c.hideManualInput = false;
	}
	
	c.startManualInventorySearch = function(assetIdentifier){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/createInventory/' + c.stockroomSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.loaded = false;
				c.inventoryCheck = response.data.result.sys_id;
				c.scanAnother = true;
				c.hideEntireStartForm = true;
				c.getAsset(assetIdentifier);
			}
		});
	}
	
	c.getAsset = function(serial){
	    c.loaded = false;
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/GetAssetInfo/' + serial,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.assetSysId = response.data.result.sysId;
				createInventoryAsset(c.inventoryCheck, c.assetSysId);
				c.assetIdentifier = '';
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this serial number. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	};
	
	c.scanAnotherAsset = function(){
		cabrillo.camera.getBarcode().then(function(barcode) {
			if (barcode){
				var assetBarcode = barcode;
				searchInventoryAssetsForDuplicate = c.inventoryAssets.find(function(asset){
					return asset.serialNumber.toString().toUpperCase().trim() === assetBarcode.toString().toUpperCase().trim();
				});
				if (searchInventoryAssetsForDuplicate) {
					c.error = true;
					c.errorMessage = "You already scanned this asset";
				} else {
					c.getAsset(barcode);
					c.loaded = true;
				}
			}else{
				c.error = true;
				c.errorMessage = "Try Again";
			}
		}, function(error) {
			c.error = true;
			c.errorMessage = "Unable to scan.";
		})
	}
	
	c.manuallyEnterAnotherAsset = function(assetIdentifier){
			searchInventoryAssetsForDuplicate = c.inventoryAssets.find(function(asset){
					return asset.serialNumber.toString().toUpperCase().trim() === assetIdentifier.toString().toUpperCase().trim();
				});
				if (searchInventoryAssetsForDuplicate) {
					c.error = true;
					c.errorMessage = "You already scanned this asset";
				} else {
					c.getAsset(assetIdentifier);
				}
			c.scanAnother = true;
	}
	
	c.getInventoryAssets = function(inventoryCheck){
		c.loaded = false;
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getInventoryAssets/' + inventoryCheck,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.inventoryAssets = response.data.result.map(function(obj){
					c.loaded = true;
					var rObj = obj;
					rObj.inventoryCheck = 'noCheck';
					if (rObj.stockroom == '') {
						rObj.stockroom = 'Not assigned';
					}
					return rObj;
				});
	
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = false;
			}
		}, function(response){
			c.errorMessage = "Unable to find this inventory's assets.";
			c.error = true;
			c.loaded = true;
		});
	};
	
	c.checkAssets = function(){
		for(var i=0; i < c.inventoryAssets.length; i++) {
			var obj = JSON.stringify(c.inventoryAssets[i]);
			c.inventoryAssets[i].inventoryCheck = 'loading';
			$http({
				method: 'get',
				url: '/api/x_gege9_asset_scan/asset_scanner/verifyAssetStockroom/' + c.inventoryAssets[i].sysId,
				headers: {
					'Content-Type': 'application/json'
				}
			}).then(function(response){
				if(response.statusText === 'OK'){
					var checkMatch = response.data.result;
					if (checkMatch.match == true){
						c.inventoryAssets.find(function(asset){
							if(asset.sysId == checkMatch.sysId){
								asset.inventoryCheck = 'success';
								return;
							}
						});
					} else {
						c.inventoryAssets.find(function(asset){
							if(asset.sysId == checkMatch.sysId){
								asset.inventoryCheck = 'fail';
								return;
							}
						});
					}
					c.error = false;
					c.loaded = true;
				}else{
					c.error = true;
					if(!!response.errorMessage){
						c.errorMessage = response.errorMessage;
					}
					c.loaded = true;
				}
			}, function(response){
				c.errorMessage = "Unable to check this.";
				c.error = true;
				c.loaded = true;
			});
		}
	}
	
	c.searchAssets = function(assetIdentifier){
		if (assetIdentifier.length === 0){
			c.emptySearch = true;
			c.stockroomSelected = false;
		} else if (assetIdentifier.length >= 1) {
			c.emptySearch = false;
			getAllAssets(assetIdentifier);
		} 
	}
	
	c.completeInventory = function(inventoryCheckSysId){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/markInventoryComplete/' + inventoryCheckSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.scanAnother = false;
				c.inventoryCheckComplete = true;
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to close this check.";
			c.error = true;
			c.loaded = true;
		});
	}
		
	function createInventoryAsset(inventoryCheck, assetSysId){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/inventoryAsset/' + inventoryCheck + '/' + assetSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.inventoryAsset = response.data.result;
				c.getInventoryAssets(c.inventoryCheck);
				c.scanAnother = true;
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this asset.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	function getAllAssets(assetIdentifier) {
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getAllAssets/' + assetIdentifier,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.allAssets = response.data.result;
			}else{
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find the assets.";
		});
	}
	
	function getInventoryCheck(checkId){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getInventoryCheck/' + checkId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.inventoryCheckInfo = response.data.result;
				c.inventoryCheckUpdatedBy = response.data.result.updatedBy;
				getUserBySso(c.inventoryCheckUpdatedBy);
			}else{
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find the assets.";
		});
	}
	
	function getUserBySso(sso){
				$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getUserBySso/' + sso,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.userName = response.data.result.name;
			}else{
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
			c.errorMessage = "Unable to find the assets.";
		});
	}
	
	c.sendReport = function(){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/sendEmail/'+ $scope.user.email +'/' + c.inventoryCheck,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
			}else{
				c.error = true;
				
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.error = true;
		});
	}
	
	
	c.stockroomSysId = c.getParameterByName('stockroom');
	c.stockroomName = c.getParameterByName('stockroomName');
	c.inventoryCheckSysId = c.getParameterByName('inventoryCheck');
	
	if (c.inventoryCheckSysId) {
		c.inventoryCheck = c.inventoryCheckSysId; 
		getInventoryCheck(c.inventoryCheck);
		c.getInventoryAssets(c.inventoryCheck);
		c.scanAnother = true;
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.search {
  width: 100%;
  border-radius: 5px;
  margin: 10px 0;
  padding-left: 10px;
  height: 40px;
}

.spinner {
  text-align: center;
}

.start-scanning-button {
  height: 90px;
}

.start-manual-button {
  height: 90px;
  margin-top: 15px;
}

.white-button {
  background-color: #ffffff;
  border: 1px solid #717171;
}

//Asset Search
.asset-search {
  padding: 0;
  margin-top: 15px;
}

.bin-green-arrow {
  font-size: 18px;
	background-color: #1ed760;
  height: 50px;
  overflow: hidden;
  color: #fff;
  padding-top: 15px;
  width: 16.6%;
}

#binSubmitContainer {
  border-radius: 0 5px 5px 0;
  text-align: center;
}

.stockroom-search {
  height: 50px;
  border-radius: 5px 0 0 5px;
}

.asset-list-container {
	padding: 0;
  margin-bottom: 60px;
}

.list-group-item {
	height: 100%;
}

.list-group-item a {
 color: #717171; 
}

.serial-number {
  font-size: 20px;
  font-weight: bold;
}

.glyphicon-chevron-down {
	padding-top: 10px; 
}

.check-assets-icon {
  width: 50px;
  height: 50px;
}

.success {
  background-image: url('completed.svg');
  background-repeat: no-repeat;
  background-position: 50% center;
  height: 60px;
}

.fail {
  background-image: url('red-x.svg');
  background-repeat: no-repeat;
  background-position: 50% center;
  height: 60px;
  
}

.loading {
  background-image: url('it4it-datacard-loading.gif');
  background-repeat: no-repeat;
  background-position: 50% center;
  height: 60px;
}

.search-item-container {
  height: 250px;
  overflow-y: scroll;
  padding: 0px;
  margin-bottom: 50px;
}

.search-item {
  padding: 5px 10px !important;
  height: 50px;
}

.search-item:hover {
  background-color: #00B2EE;
  color: #ffffff;
}


.next-asset-div {
  display: flex;
  justify-content: space-between;
  margin-bottom: 5px;
}

.next-asset-button {
	height: 50px;
  margin-bottom: 10px;
}

.check-assets-button {
	width: 100%; 
  height: 40px;
  background-color: #00B2EE;
  color: #ffffff;
 	border-radius: 5px;
  margin-top: 10px;
}

//Home Nav
.navbar {
	min-height: 0 !important;  
}

.bottom-nav {
	background-color: #fff;
  border-top: 1px solid #ccc;
  height: 40px;
}

.navbar-fixed-bottom {
	bottom: 0; 
}

.bottom-nav ul {
	padding: 0;
}

.bottom-nav li {
	padding: 0;
}

.home-menu {
  position: absolute;
  bottom: 0;
}

.navbar-nav {
  margin: 0 !important;
}

.navbar-nav li a {
 line-height: 15px !important; 
 padding: 5px 0 !important;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>inventory_check</id>
        <internal>false</internal>
        <link/>
        <name>Inventory Check</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {  /* populate the 'data' object */  /* e.g., data.table = $sp.getValue('table'); */
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>212606938</sys_created_by>
        <sys_created_on>2018-05-08 18:34:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b94a02ccdb0a1340d087d8965e96191b</sys_id>
        <sys_mod_count>541</sys_mod_count>
        <sys_name>Inventory Check</sys_name>
        <sys_package display_value="Asset Scanning" source="x_gege9_asset_scan">7be151dddbe55700d087d8965e9619c8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asset Scanning">7be151dddbe55700d087d8965e9619c8</sys_scope>
        <sys_update_name>sp_widget_b94a02ccdb0a1340d087d8965e96191b</sys_update_name>
        <sys_updated_by>212606938</sys_updated_by>
        <sys_updated_on>2018-07-11 13:45:16</sys_updated_on>
        <template><![CDATA[<div class="row">
  <div>

    <!-- Error Alert -->
    <div class="alert alert-danger error-message" ng-show="c.error">
      {{c.errorMessage}}
    </div>
    
    
    <div class="col-xs-12">
      <h3>
        Check {{c.stockroomName}} Inventory
      </h3>
      <h4 ng-hide="c.inventoryCheckComplete">
        Build your list, then click "Check Assets".
      </h4>
      <div ng-if="c.inventoryCheckInfo">
        <p>
          <b>Inventory Check Creator: </b> {{c.inventoryCheckInfo.inventoryCreator}}
        </p>
        <p>
          <b>Last Updated By: </b> {{c.userName}}
        </p>
      </div>
      <h3 ng-show="c.inventoryCheckComplete">
        Inventory Check Completed
      </h3>
      
      <button class="btn col-xs-12 start-scanning-button white-button" ng-hide="c.scanAnother || c.inventoryCheckComplete" ng-click="c.startInventoryScan()">
        Start Scanning
      </button>
      
      <div ng-hide="c.hideEntireStartForm" >
        <button class="btn col-xs-12 start-manual-button white-button" ng-hide="c.scanAnother || c.manualEntryClicked || c.inventoryCheckComplete" ng-click="c.openManualInventoryForm()">
          Start Manual Entry
        </button>
        <div class="col-xs-12 asset-search" ng-show="c.manualEntryClicked" ng-hide="c.hideManualInput">
          <input class="col-xs-10 stockroom-search" type="text" list="stockrooms" 
                 placeholder="Type in asset serial number" 
                 ng-model="c.assetIdentifier" />
          <div id="binSubmitContainer" class="col-xs-2 bin-green-arrow" ng-click="c.startManualInventorySearch(c.assetIdentifier)">
            <i id="binArrowIcon" class="glyphicon glyphicon-chevron-right"></i>
          </div>
        </div>
      </div>

      <button class="btn col-xs-12 next-asset-button white-button" ng-show="c.scanAnother" ng-click="c.scanAnotherAsset()">
        SCAN NEXT ASSET
      </button>      
      <div ng-show="c.scanAnother">
        <input class="col-xs-10 stockroom-search" type="text" list="stockrooms" 
               placeholder="Enter another asset serial number" 
               ng-model="c.assetIdentifier" />
        <div id="binSubmitContainer" class="col-xs-2 bin-green-arrow" ng-click="c.manuallyEnterAnotherAsset(c.assetIdentifier)">
          <i id="binArrowIcon" class="glyphicon glyphicon-chevron-right"></i>
        </div>
      </div>

      <button class="check-assets-button btn" ng-click="c.checkAssets()" ng-show="c.scanAnother">CHECK ASSETS</button>
      <button class="check-assets-button btn" ng-click="c.completeInventory(c.inventoryCheck)" ng-show="c.scanAnother">COMPLETE INVENTORY</button>
			<a class="check-assets-button btn" ng-click="c.sendReport()" 
         download>DOWNLOAD REPORT</a>
      <a class="check-assets-button btn" href="/asset_scan?id=inventory" ng-show="c.inventoryCheckComplete">BACK TO INVENTORY HOME</a>

      <div class="col-xs-12 asset-search" ng-show="c.scanAnother || c.inventoryCheckComplete">

        <input class="search" type="text" ng-model="c.searchText" placeholder="Search for asset here" />
      </div>

      <div class="col-xs-12 asset-list-container">
        <div class="list-group">
          <div class="row list-group-item" ng-repeat="asset in c.inventoryAssets | filter: c.searchText ">
            <a ng-href="/asset_scan?id=scanned_information&serial_no={{asset.serialNumber}}">
              <div class="col-xs-1" ng-class="asset.inventoryCheck"></div>
              <div class="col-xs-10">
                <div class="serial-number">
                  Serial Number: {{asset.serialNumber}}
                </div>
                <div>
                  <b>Asset Name: </b>{{asset.name}}
                </div>
                <div>
                  <b>Stockroom: </b>{{asset.stockroom}}
                </div>
                <div ng-class="{'hidden': ! showDetails}">
                  <div>
                    <b>Retirement Date:</b> {{asset.retirementDate}}
                  </div>
                  <div>
                    <b>Keyboard:</b> {{asset.keyboard}}
                  </div>
                  <div>
                    <b>Acquisition Method:</b> {{asset.acquisitionMethod}}
                  </div>
                  <div>
                    <b>Acquisition Country:</b> {{asset.acquisitionCountry}}
                  </div>
                </div>
              </div>
              <a href="#asset-details" ng-click="showDetails = !showDetails" class="details-toggle">
                <i class="glyphicon glyphicon-chevron-up" ng-class="{'hidden': ! showDetails}"></i>
                <i class="glyphicon glyphicon-chevron-down" ng-class="{'hidden': showDetails}"></i>
              </a>
            </a>
          </div>
        </div>
        <div class="spinner" ng-show="!c.loaded">
          <i class="fa fa-spinner fa-4x fa-pulse"></i>
        </div>

        <div class="navbar navbar-fixed-bottom bottom-nav">
          <div class="container-fluid">
            <ul class="nav navbar-nav col-xs-12">
              <li class="text-center center-block col-xs-12">
                <a class="home-link" href="/asset_scan"><i class="glyphicon glyphicon-home"></i>
                  <p class="home-p">
                    Home
                  </p>
                </a>
              </li>
            </ul>
          </div>
        </div>




      </div>
    </div>


  </div>
</div>]]></template>
    </sp_widget>
</record_update>
