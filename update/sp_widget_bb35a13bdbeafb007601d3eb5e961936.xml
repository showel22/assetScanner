<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[
function($http, cabrillo, $scope) {
  /* widget controller */
  var c = this;
  //Message variables
  c.error = false;
  c.errorMessage = '';
  c.validationError = false;
  c.validationErrorPcModel = false;
  c.validationErrorAsset = false;
  c.showUpdatedAssets = false;
  c.showFailedAssets = false;
  //Data variables
  c.enteredAssets = [];
  
  
  //Show/Hide variables
  //Show/hide PC Model main button to select field
  c.showForm = false;
  c.showPcModelButton = false;
  c.showAddAllAssets = false;
  c.assetAdded = false;
  c.submittingAllAssets = false;
  c.listAddingError = false;
  
  
  //Show the Manual Bin Input and button form when click on "Manually Enter Bin" button
  c.showBinInput = function(){
    //Show the input field and label
    c.showForm = true;
    //Hide error message if already loaded
    c.error = false;
  };
  
  
  //Get the stockroom by the stockroom sysId. Called above in the c.scanBin function.
  //Calls getStockroomById scripted REST API.
  function getStockroomById(stockroomSysId){
    $http({
      method: 'get',
      url: '/api/x_gege9_asset_scan/asset_scanner/getStockroomInfo/' + stockroomSysId,
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(function(response){
      if (response.statusText === 'OK'){
        c.error = false;
        c.submittedBinName = response.data.result.name;
        c.stockroomSysId = response.data.result.sysId;
        c.binSubmitted = true;
        //c.showAddlQuestions = true;
        c.showPcModelButton = true;
      } else {
        c.error = true;
        if(!!response.errorMessage){
          c.errorMessage = response.errorMessage;
        }
      }
    },function(response){
      c.error = true;
      c.errorMessage = "Unable to find that stockroom.";
    });
  }
  
  //Click the Scan Bin button and bring up the camera to scan the stockroom
  c.scanBin = function(todo){
    cabrillo.camera.getBarcode().then(function(barcode) {
      if (barcode){
        //If a barcode is found, call the API to get the stockroom data
        getStockroomById(barcode);
      }else{
        c.error = true;
        c.errorMessage = "Try Again";
      }
    }, function(error) {
      c.error = true;
      c.errorMessage = "Unable to scan.";
    })
  };
  
  //Get all the stockrooms. Uses the getAllStockrooms scripted REST API.
  function getAllStockrooms(stockroomName) {
    $http({
      method: 'get',
      url: '/api/x_gege9_asset_scan/asset_scanner/' + stockroomName + '/all',
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(function(response){
      if(response.statusText === 'OK'){
        c.error = false;
        c.stockrooms = response.data.result;
      }else{
        c.error = true;
        
        if(!!response.errorMessage){
          c.errorMessage = response.errorMessage;
        }
      }
    }, function(response){
      c.error = true;
      c.errorMessage = "Unable to find or you do not have permission to edit that stockrom.";
    });
  }
  
  //Search the stockrooms by the entry in the input field for the Manual Bin Search.
  //This is called in an ng-change, so once the user types in a character, it searches through the stockrooms for a match on the Stockroom/Bin name
  c.searchStockrooms = function(stockroomName){
    //Check to see if user has typed into the input
    if (stockroomName.length === 0){
      c.emptySearch = true;
      c.stockroomSelected = false;
    } else if (stockroomName.length >= 1) {
      //If entry in input, get the Stockrooms by their name
      c.emptySearch = false;
      getAllStockrooms(stockroomName);
    } 
  }

  //Once the user clicks on/selects a specific stockroom, save that stockroom's name and sysId and close the dropdown
  c.selectStockroom = function(stockroom){
    c.stockroomName = stockroom.name;
    c.stockroomSysId = stockroom.sysId;
    c.stockroomSelected = true;
  }
  
  //Save the submitted bin to a variable.  Hide the bin selection buttons/form.
  c.submitBin = function(){
    if (c.stockroomSelected === false){
      c.error = true;
      c.errorMessage = "Please select a bin."
    } else {
      c.error = false;
      c.submittedBinName = c.stockroomName;
      c.submittedStockroomSysId = c.stockroomSysId;
      c.stockroomName = '';
      c.binSubmitted = true;
    //  getKeyboardLayouts();
    //  getAcquisitionMethods();
    //  getAcquisitionCountries();
      //c.showAddlQuestions = true;
      c.showPcModelButton = true;
    }
  }

  //Get a list of all the models for Personal Computers
 /* function getAllComputerModels(pcModelName){
    $http({
      method: 'get',
      url: '/api/x_gege9_asset_scan/asset_scanner/getAllComputerModels/' + pcModelName,
      headers: {
        'Content-Type': 'application/json'
      }
    }).then(function(response){
      if (response.statusText === 'OK'){
        c.error = false;
        c.computerModels = response.data.result;
      } else {
        c.error = true;
        c.errorMessage = 'Try Again'
      }
    }, function(response){
      c.error = true;
      c.errorMessage = "Unable to find that computer model."
    });
  } */
  
  //
  c.showPcModelInput = function(){
    //Show the input field and label
    c.showForm = true;
    //Hide error message if already loaded
    c.error = false;
  }
  
  
  //Scan asset and add it to the list of assets for adding
  c.scanAsset = function(stockroom){
    //if(!c.pcModelSysId){
      //c.validationError = true;
      //return;
    //}
    cabrillo.camera.getBarcode().then(function(barcode){
      if(barcode){
        c.assetNumber = barcode;
        c.error = false;
        
        //c.listAddedSuccess = false;
        //c.validationError = false;
        //c.pcModelSubmitted = false;
        //c.pcModelSelected = false;
        c.assetAdded = true;
        //c.emptySearch = true;       
        c.addAssetToList();
        
        //Clear out inputs
        c.assetNumber = '';
        //c.pcModelName = '';
      } else {
        c.error = true;
        c.errorMessage = 'Cannot add asset';
      }
    }, function(){
      c.error = true;
      c.errorMessage = "Unable to scan.";
    })
  };
  
  //Manually enter asset and add it to the list of assets for adding
  
  c.manuallyEnterAsset = function(){
    c.listAddedSuccess = false;
    c.listAddingError = false;
    c.validationError = false;
    c.validationErrorAsset = false;
    //if(!c.pcModelName|| !c.assetNumber){
    //  if (!c.pcModelName && c.assetNumber){
    if(!c.assetNumber){
      c.validationError = true;
      c.validationErrorAsset = true;
      return;
    } else {
      c.validationError = true;
      c.validationErrorAsset = true;
    }
    if (c.assetNumber && c.assetNumber.length >= 1) {
      c.validationError = false;
      c.validationErrorAsset = false;
      c.assetNumber = c.assetNumber.toUpperCase();
      c.error = false;
      c.listAddedSuccess = false;
      c.assetAdded = true;
      c.emptySearch = true;       
      c.addAssetToList();
      //Clear out inputs
      c.assetNumber = '';
    } else {
      //c.error = true;
      c.validationError = true;
      c.validationErrorAsset = true;
    }
  }
  
  c.addAssetToList = function(){
    /*if (!c.selectedKeyboard && !c.selectedKeyboard && !c.selectedKeyboard && !c.purchaseDate && !c.retirementDate && !c.warrantyExpiration && !c.installDate) {
      c.error = true;
      c.errorMessage = 'Please fill in all fields.'
    } else { */
      c.enteredAssets.push({
      //  pcModel: c.pcModelName,
      //  pcModelSysId: c.pcModelSysId,
        barcode: c.assetNumber,
        stockroom: c.stockroomSysId
    /*  category: c.pcModelCategory,
        keyboardLayout: c.keyboard,
        acquisitionMethod: c.acquisitionMethod,
        acquisitionCountry: c.acquisitionCountry,
        purchaseDate: c.purchaseDate,
        retirementDate: c.retirementDate,
        warrantyExpiration: c.warrantyExpiration,
        installDate: c.installDate */
      });
      c.showAssetListAndAdd = true;
    c.pcModelName = '';
    c.pcModelSysId = '';
  }
  
  c.removeAssetFromList = function(i) {
    c.enteredAssets.splice(i,1);
  }
  
  
  //Add all entered assets into the alm_hardware table
  c.bulkMoveAssets = function(){
    c.submittingAllAssets = true;
    $http({
      method: 'post',
      url: '/api/x_gege9_asset_scan/asset_scanner/bulkMoveAssets',
      headers: {
        'Content-Type': 'application/json'
      },
      data: {'assetArray': c.enteredAssets}
    }).then(function(response){
      if (response.statusText === 'OK'){
        c.listAddedSuccess = true;
        c.validationError = false;
        c.successMessage = 'Assets successfully added.'
        c.enteredAssets = [];
        c.showAddAllAssets = false;
        c.updatedAssets = response.data.result.filter(function(asset){
            return asset.success;
           }).map(function(asset){return asset.asset}).join(", ");
        if (c.updatedAssets.length >= 1){
          c.showUpdatedAssets = true;
        } else{
          c.showUpdatedAssets = false;
        }
        c.failedAssets = response.data.result.filter(function(asset){
            return !asset.success;
        }).map(function(asset){return asset.asset}).join(", ");
        if (c.failedAssets.length >= 1){
          c.showFailedAssets = true;
        } else{
          c.showFaileddAssets = false;
        }
        c.submittingAllAssets = false;
      } else {
        c.error = true;
        c.submittingAllAssets = false;
        c.listAddingError = true;
        c.listAddedSuccess = false;
        c.listAddingErrorMessage = 'Please add an asset to the list to continue';
        if(!!response.errorMessage){
          c.errorMessage = response.errorMessage;
        }
      }
    }, function(response){
        c.error = true;
        c.errorMessage = 'Unable to add assets.';
      c.submittingAllAssets = false;
      c.listAddingError = true;
      c.listAddedSuccess = false;
      c.listAddingErrorMessage = 'Please add an asset to the list to continue';
    })
  }
  
}]]></client_script>
        <controller_as>c</controller_as>
        <css>//Main styling
.new-asset-home {
  background: linear-gradient(#00B2EE 115px, 115px, #FFFFFF);
  height: 160vh;
  width: 100%;
}

//Errors
.error-message {
  z-index: 999;
  margin-top: 10px;
  position: absolute;
}

.red-border {
  border: 1px solid red !important;
}

.gray-border {
  border: 1px solid gray !important;
}

//Title
.new-asset-title {
  padding: 20px; 
  text-align: center;
  color: #ffffff; 
}

//Button Containers
.button-row {
  margin: 0 auto;
}

.button-container {
  padding: 0;
  border: 1px solid #717171;
  border-radius: 5px;
}


//PC Model

.model-btn {
  padding: 0;
  height: 90px;
}

.model-btn:hover {
  background-color: #ffffff;
}

#modelAdd {
  padding-top: 30px;
}

.model-btn-text {
  font-size: 18px;
  color: #717171;
}

.model-btn-text:hover {
  color: black;
}

.model-green-arrow, .model-green-arrow-small {
  background-color: #1ed760;
  overflow: hidden;
  color: #fff;
  border-radius: 0 5px 5px 0;
  text-align: center;
}

.model-green-arrow {
  font-size: 18px;
  height: 90px;
  padding-top: 30px;
}

.model-green-arrow-small {
  font-size: 15px;
  height: 65px;
  padding-top: 22px;
}

.search-container {
  padding: 0;
  background-color: #fff;
  border: 1px solid #717171;
  border-radius: 5px;
  margin-bottom: 10px;
}

//PC Model Search
.big-search, .small-search {
  border-radius: 5px;
  border: none;
}

.big-search {
  height: 90px;
}

.small-search {
  height: 65px;
}

.search-item-container {
  max-height: 250px;
  overflow-y: scroll;
  padding: 0px;
}

.search-item-container-pc-model {
  max-height: 250px;
  width: 80.7%;
  overflow-y: scroll;
  margin: 0 auto;
  position: absolute;
  z-index: 1000;
  left: 9.6%;
  //top: 193px;
  //top: 435px;
  top: 477px;
}

.search-item {
  padding: 5px 10px !important;
  height: 50px;
  line-height: 3;
}

//Select Boxes
.select-box {
  height: 50px;
}

.select-box-label {
  height 50px;
  padding: 5px 10px !important;
  font-size: 16px;
  //line-height: 41px;
}

//Date Pickers
.date-picker {
  height: 50px;
  width: 100%;
  padding: 5px 10px !important;
}

.date-picker input {
  //width: 99.5%;
  border-radius: 5px !important;
  border: 1px solid #717171;
  height: 50px;
  color: #717171;  
}

.glyphicon-calendar {
  color: #717171;  
}

//General Buttons Styling

button {
  font-size: 20px;
  border: none;
}

.button-icon {
  display: block;
  margin: 0 auto;
}

.white-button {
  background-color: #ffffff;
  border: 1px solid #717171;
  border-radius: 5px;
}

a .white-button{
  color: inherit;
}

.section-title {
 padding: 10px 0 0 0; 
}

//Scanning Button
.start-scanning-button {
  height: 100px;
  margin-bottom: 10px;
}

#barcode-icon {
  height: 50px;
}

//Add Assets Button
.blue-button, .small-green-button {
  color: #ffffff;
  border-radius: 5px;
  margin-top: 10px;
}

.blue-button {
  background-color: #00B2EE;
  height: 90px;
  margin-bottom: 60px;
}

.small-green-button {
  height: 65px;
  margin-bottom: 1px;
  background-color: #1ed760;
}

//Spinner

.spinner {
  text-align: center;
  padding: 24px;
  margin-bottom: 60px;
}

//Home Nav
.navbar {
  min-height: 0 !important;  
}

.bottom-nav {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.navbar-fixed-bottom {
  height: 40px;
}

.bottom-nav ul {
  padding: 0;
}

.bottom-nav li {
  padding: 0;
}

.home-menu {
  position: absolute;
  bottom: 0;
}

.navbar-nav {
  margin: 0 !important;
}

.navbar-nav li a {
 line-height: 15px !important; 
 padding: 5px 0 !important;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>bulk_move_assets</id>
        <internal>false</internal>
        <link/>
        <name>Bulk Move Assets</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {  /* populate the 'data' object */  /* e.g., data.table = $sp.getValue('table'); */})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>212680595</sys_created_by>
        <sys_created_on>2019-07-16 20:23:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>bb35a13bdbeafb007601d3eb5e961936</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Bulk Move Assets</sys_name>
        <sys_package display_value="Asset Scanning" source="x_gege9_asset_scan">7be151dddbe55700d087d8965e9619c8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asset Scanning">7be151dddbe55700d087d8965e9619c8</sys_scope>
        <sys_update_name>sp_widget_bb35a13bdbeafb007601d3eb5e961936</sys_update_name>
        <sys_updated_by>212680595</sys_updated_by>
        <sys_updated_on>2019-07-17 19:44:22</sys_updated_on>
        <template><![CDATA[<div>
  <div class="container-fluid">
    <div class="row">
      <div class="col-xs-12 new-asset-home">
		
        <!-- Error Message -->
        <div class="alert alert-danger col-xs-10 col-xs-offset-1 error-message" ng-show="c.error">
          {{c.errorMessage}}
        </div>
        
        <!-- Success Message -->
        <div class="alert alert-success col-xs-10 col-xs-offset-1" ng-show="c.success">
          {{c.successMessage}}
        </div>


        <!-- Title -->
        <div class="new-asset-title col-xs-12">
          <h3>Multiple Asset Move</h3>
          <h4 ng-hide="c.binSubmitted">Start by selecting the bin where you would like to assign the assets.</h4>
         <!-- <h4 ng-show="c.showPcModelButton">Now enter the model of the asset.</h4> -->
          <h4 ng-show="c.pcModelSubmitted">Scan or enter the asset's serial number.</h4>
        <!--  <h4 ng-show="c.showAddlQuestions">Please fill out the additional information needed for the asset.</h4> -->
        </div>
        
        <!-- Bin Select -->
         <div ng-hide="c.binSubmitted">
          <div class="row button-row" id="scan-button-row">
            <button class="btn col-xs-10 col-xs-offset-1 start-scanning-button white-button" ng-click="c.scanBin()">
              <img class="button-icon" id="barcode-icon" src="barcode-icon.png" />Scan Bin
            </button>
          </div>
          <div class="row button-row manual-button-row">
            <div class="col-xs-10 col-xs-offset-1 button-container" ng-click="c.showBinInput()" ng-hide="c.showForm">
              <button class="btn btn-default col-xs-12 model-btn">
                <div id="modelAdd" class="col-xs-10 model-btn-text">
                  Manually Enter Bin
                </div>
                <div class="col-xs-2 model-green-arrow">
                  <i class="glyphicon glyphicon-chevron-right"></i>
                </div>
              </button>
            </div>
            <div class="col-xs-10 col-xs-offset-1 search-container" ng-show="c.showForm">
              <input class="col-xs-10 big-search" type="text" list="stockrooms" 
                     placeholder="Type bin name here" ng-change="c.searchStockrooms(c.stockroomName)" 
                     ng-model="c.stockroomName" />
              <div class="col-xs-2 model-green-arrow" ng-click="c.stockroomSelected && c.submitBin()">
                <i class="glyphicon glyphicon-chevron-down" ng-hide="c.stockroomSelected"></i>
                <i class="glyphicon glyphicon-chevron-right" ng-show="c.stockroomSelected"></i>
              </div>
            </div>
            <div class="col-xs-10 col-xs-offset-1 search-item-container" ng-hide="c.stockroomSelected">
              <li class="list-group-item search-item" ng-repeat="stockroom in c.stockrooms | limitTo: 20 | orderBy: 'name'" 
                  ng-hide="c.emptySearch" ng-click="c.selectStockroom(stockroom)">{{stockroom.name}}</li>
            </div>
          </div>
        </div>
        
   
				<!-- Enter Asset Buttons-->
        <div ng-show="c.showPcModelButton">
          <h4 class="col-xs-10 col-xs-offset-1 section-title">Scan or type in the asset serial number. Do not scan or enter a T tag here.</h4>
          <!-- Scan Asset Button -->
          <button class="btn col-xs-10 col-xs-offset-1 start-scanning-button white-button" ng-click="c.scanAsset(c.stockroomSysId)">
            <img class="button-icon" id="barcode-icon" src="barcode-icon.png" />Scan Asset
          </button>
          <div class="col-xs-10 col-xs-offset-1 search-container">
            <input class="col-xs-10 small-search" type="text" 
                   ng-class="{'red-border': c.validationErrorAsset}"
                   placeholder="Can't scan asset? Type in serial number."
                   ng-model="c.assetNumber"/>
            <div class="col-xs-2 model-green-arrow-small" ng-click="c.manuallyEnterAsset()">
              <i class="glyphicon glyphicon-plus"></i>
            </div>
          </div>
        </div>
               
        <div class="row">
            <div class="alert alert-danger col-xs-10 col-xs-offset-1" ng-show="c.validationError">You must fill out the fields outlined in red.</div>
          </div> 
             
           <!-- Asset List -->
        <div ng-show="c.showPcModelButton">
          <div class="alert alert-success col-xs-10 col-xs-offset-1" ng-show="c.showUpdatedAssets">
           <!-- {{c.successMessage}} -->
             <b>Updated Assets: </b>{{c.updatedAssets}}
          </div>
          <div class="alert alert-danger col-xs-10 col-xs-offset-1" ng-show="c.showFailedAssets">
            <!-- {{c.listAddingErrorMessage}} -->
            <b>Failed Assets: </b>{{c.failedAssets}}
          </div>
          <div class="alert alert-danger col-xs-10 col-xs-offset-1" ng-show="c.listAddingError">
            {{c.listAddingErrorMessage}}
          </div>
          
          <h4 class="col-xs-10 col-xs-offset-1">Entered Asset List:</h4>
          <div class="col-xs-10 col-xs-offset-1" ng-hide="c.assetAdded">No entered assets. Fill out the fields above and hit the green button to add an asset to the list.</div>

          <div class="row asset-list-container">
            <div class="col-xs-12" ng-repeat="asset in c.enteredAssets">

              <div class="row">
                <div class="col-xs-12 list-group-item">
                  <div class="col-xs-offset-1 col-xs-8">
                    <b>Asset Serial Number: </b> {{asset.barcode}}
                    <b>Asset Stockroom: </b> {{c.submittedBinName}}
                  </div>
                 <!--<div class="col-xs-offset-1 col-xs-8">
                    <b>PC Model: </b> {{asset.pcModel}}
                  </div> -->
                  <a href="" ng-click="c.removeAssetFromList($index)" class="fa fa-remove pull-right text-danger"></a>
                </div>
              </div>

            </div>
          </div>
          
          <!-- Add All Assets Button -->
          <button class="btn col-xs-10 col-xs-offset-1 blue-button" ng-show="c.enteredAssets.length" ng-hide="c.submittingAllAssets" ng-click="c.bulkMoveAssets()">
            Move Selected List to bin
          </button>

          <div class="spinner" ng-show="c.submittingAllAssets">
            <i class="fa fa-spinner fa-4x fa-pulse"></i>
          </div>
        </div>

      </div>
    </div>
  </div>
</div>

<!-- Home Nav -->
<div class="navbar navbar-fixed-bottom bottom-nav">
  <div class="container-fluid">
    <ul class="nav navbar-nav col-xs-12">
      <li class="text-center center-block col-xs-12">
        <a class="home-link" href="/asset_scan"><i class="glyphicon glyphicon-home"></i>
          <p>
            Home
          </p>
        </a>
      </li>
    </ul>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
