<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($location, $http, cabrillo) {
  /* widget controller */
  var c = this;
  c.loaded = false;
	c.showDetails = true;
	c.freeformClicked = false;
	c.maxLength = 160;
	
  c.ASSET_KEY_MAP = {
    'modelCategory': 'Model Category',
    'model': 'Model',
		'acquisitionCountry': 'Acquisition Country',
    'assetType': 'Asset Type',
    'retirementDate': 'Retirement Date',
		'assignedTo': 'Assigned To',
		'assignedToIsVIP': 'Assigned to VIP'
  };

	c.ITEM_KEY_MAP = {
		'itemNumber': 'RITM',
		'item': 'Type',
		'stage': 'Stage',
		'dataReclamation': 'Data Reclamation'
	};

  c.getParameterByName = function(param) {
	   return $location.search()[param];
  };
	
  c.navigate = function(link) {
	  window.location.href = link;
  };
	
	c.toggleDetails = function(){
		if(c.showDetails){
			c.showDetails = false;
		}else{
			c.showDetails = true;
		}
	};
  
  c.getAsset = function(serial){
	    c.loaded = false;
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/GetAssetInfo/' + serial,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.assetSysId = response.data.result.sysId;
				getTodoList(response.data.result.sysId);
				c.transformData(response.data.result);
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this serial number. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	};
  
  c.transformData = function(data) {
	  c.image = data.modelImage;
		c.sysId = data.sysId;
	  c.requests = data.items.map(function(item) {
		  var request = {};
		  request.url = item.url;
			//request.sysId = item.sysId;
		  request.details = c.mapProperties(item, c.ITEM_KEY_MAP);
		  console.log(request);
		  return request;
	  });
	  c.url = data.url;
	  c.details = c.mapProperties(data, c.ASSET_KEY_MAP);
  };
	
  c.mapProperties = function(obj, mapping) {
	Object.keys(obj)
      .forEach(function(key) {
        var newKey = mapping[key];
        if (typeof(newKey) != 'undefined')
          obj[newKey] = obj[key];
        delete(obj[key]);
      });
    return obj;
  };
	
	//Click the todo list item and bring up the camera to scan the stockroom
	c.scanTodo = function(todo){
		if (todo.state == '1'){
			cabrillo.camera.getBarcode().then(function(barcode) {
				if (barcode){
					c.showBinResults = true;
					c.showBinButtons = false;
					updateStockroom(c.assetSysId, todo.sysId, barcode);
				}else{
					c.error = true;
					c.errorMessage = "Try Again";
				}
			}, function(error) {
				c.error = true;
				c.errorMessage = "Unable to scan.";
			})
		}
	};
	
	c.markSkipped = function(todoSysId){
		skipTodo(todoSysId);
		c.showBinResults = true;
		c.showForm = false;
		c.showBinButtons = false;
	};
	
	c.showFreeformForm = function() {
		c.freeformClicked = true;
	};
	
	c.freeformSubmit = function(shortDescription) {
		if (shortDescription.length <= 160) {
			createTodo(shortDescription);
			c.freeformText = '';
			c.freeformClicked = false;
		} else {
			c.errorMessage = "Your description is too long.";
		}
	};
	
	function getTodoList(sysId){
	    c.loaded = false;
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getToDoList/' + sysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.todos = response.data.result;
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo list. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	function updateStockroom(assetSysId, todoSysId, stockroom){
	    c.loaded = false;
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/updateStockroom/' + assetSysId + '/' + stockroom,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.stockroomData = response.data.result;
				c.stockroomSysId = response.data.result.sysId;
				c.error = false;
				c.loaded = true;
				completeTodo(todoSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this stockroom. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	function completeTodo(todoSysId){
	  c.loaded = false;
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/completeToDo/' + todoSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.loaded = true;
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo item.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	function skipTodo(todoSysId){
	  c.loaded = false;
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/skipToDo/' + todoSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.loaded = true;
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo item.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	//Create freeform todo
	function createTodo(shortDescription){
	    c.loaded = false;
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/createFreeForm/' + c.assetSysId + '/' + shortDescription,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.loaded = true;
				c.freeformDescription = '';
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo list. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	// Client side access to camera scan
	c.binScanPage = function(){
			window.location.href = 'asset_scan?id=bin_scan&sys_id=' + c.sysId;
	};
  
  c.serial_no = c.getParameterByName('serial_no');
  c.getAsset(c.serial_no);

}]]></client_script>
        <controller_as>c</controller_as>
        <css>#content {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-width: 720px;
  margin: 0 auto;
  padding: 0px 5px;
}

#results {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 0px 10px;
}

#asset-details {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: 100%;
  margin-bottom: 10px;
}

.more-details-button {
 margin-top: 5px; 
}

#confirm {
  background-color: #00bf6f; 
}

#reject {
  background-color: red; 
}

table {
 table-layout: fixed;
}

th, td {
  word-wrap: break-word; 
}

th.-v-align--middle {
  vertical-align: middle; 
}

input {
  margin-bottom: 10px; 
}

h5 {
  color: black;
  font-weight: 600;
  margin: 5px 0px;
}

hr {
  width: 100% !important; 
  height: 1px;
  background-color: rgb(200, 200, 200);
  margin: 10px;
}

#todo {
 padding: 5px 20px 5px 5px; 
}

.barcode-row {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
	flex-direction: row;
  flex: 1;
}

.barcode {
	display: flex;
  justify-content: flex-start;
  flex-direction: column;
  margin-top: 10px;
}

.barcode-label {
	font-size: 12px;
}

.barcode-number {
	font-size: 26px;
  color: #000;
}

.asset-image {
	display: flex;
  align-self: center;
  margin: 0 auto;
}

.details-toggle {
  display: flex;
  text-align: right;
  align-items: baseline;
  align-self: flex-end;
  vertical-align: center;
  font-size: 24px;
  float: right;
}

.spinner {
  text-align: center;
  padding: 24px;
}

.asset-details {
  width: 100%;
  display: flex;
	flex-direction: column;
  flex: 1;
  justify-content: space-around;
}

.asset-lists {
  width: 100%;
	display: flex;
  flex-direction: column;
}

.asset-attr {
  display: flex;
  margin: 5px 10px;
}

.attr {
  flex: 1 1 50%; 
}

.-align--center {
  align-self: center; 
}

.-align--stretch {
  align-self: stretch;
}

.accept-reject-button {
  width: 40%;
}

button #reject {
  background-color: red; 
}

button #confirm {
  background-color: green;
}

.todo-nav {
  font-size: 12px;
  text-align: center;
}

.todo-tab {
 padding: 0; 
}

.disabled-text, .disabled-text:hover {
  color: #A9A9A9;
}

.disabled-text-red, .disabled-text-red:hover {
  color: red;
}

.todo-list-container {
	display: flex;
  align-items: center;
  color: #717171;
  padding-bottom: 10px;
}

.todo-scan {
  padding-left: 0;
}

.todo-list-icon-container {
  text-align: center;
}

.to-do-items {
  padding-left: 0;
}

.todo-list {
  padding: 20px 0;
}

.todo-number {
	align-self: flex-start; 
}

.todo-freeform-btn {
	padding: 0;
  height: 50px;
  margin: 20px 0;
}

.todo-freeform-btn-text {
	padding: 12px 0;
  font-size: 18px;
}

.todo-green-plus {
  padding: 12px 0;
  font-size: 18px;
	background-color: #1ed760;
  height: 100%;
  overflow: hidden;
  color: #fff;
}

.todo-type {
	font-weight: bold;
}

.freeform-container {
  display: flex;
  float: left;
  width: 100%;
}
textarea {
 border: 1px solid #ccc; 
 border-radius: 5px 0px 0px 5px;
 height: 50px;
 margin-bottom: 5px;
 resize: none;
 vertical-align: top;
  width: 83%
}

.freeform-submit {
 height: 50px;
 vertical-align: top;
 width: 17%;
 border-radius: 0px 5px 5px 0px; 
}

//Completed Tab
#completedTodo {
  padding-top: 5px;
}

.completed-icon {
  padding-left: 10px;
  font-size: 15px;
}

//Requests Tab
.request-block {
	padding: 15px 20px;
}

.request-number {
	padding: 0 0 10px 0;
  font-size: 16px;
  font-weight: bold;
}

.request-title {
	font-weight: bold;
}

.requests-details {
  display: flex;
  align-items: center;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>scanned-information</id>
        <internal>false</internal>
        <link/>
        <name>Scanned Information</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.userSkills = [];
	var thisUser = gs.getUserID();
	gs.info(thisUser);
	var userSkillGR = new GlideRecord('sys_user_has_skill');
	userSkillGR.addQuery('active', true);
	userSkillGR.addQuery('user', thisUser);
	userSkillGR.query();
	gs.info('test');
	while(userSkillGR.next()){
		gs.info('test');
		data.userSkills.push({
			sys_id: userSkillGR.skill.toString(),
			name: userSkillGR.skill.name.toString()
		});
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>212613005</sys_created_by>
        <sys_created_on>2018-04-18 15:36:31</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e4b1ee29dbe11b00d087d8965e96193e</sys_id>
        <sys_mod_count>698</sys_mod_count>
        <sys_name>Scanned Information</sys_name>
        <sys_package display_value="Asset Scanning" source="x_gege9_asset_scan">7be151dddbe55700d087d8965e9619c8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asset Scanning">7be151dddbe55700d087d8965e9619c8</sys_scope>
        <sys_update_name>sp_widget_e4b1ee29dbe11b00d087d8965e96193e</sys_update_name>
        <sys_updated_by>212606938</sys_updated_by>
        <sys_updated_on>2018-04-27 20:08:35</sys_updated_on>
        <template><![CDATA[<div id="content">
  <!-- The row with barcode and toggle -->
  <div class="barcode-row">
    <div class="barcode">
      <span class="barcode-label">Barcode Information</span>
      <span class="barcode-number">{{c.serial_no.toUpperCase()}}</span>
    </div>
    <img class="img img-responsive asset-image" width="65" height="65"
         ng-src="{{c.image}}" ng-show="c.loaded && !c.error" />
    <a href="#asset-details" ng-click="c.toggleDetails()" class="details-toggle">
      <i class="glyphicon glyphicon-chevron-up" ng-show="c.showDetails"></i>
      <i class="glyphicon glyphicon-chevron-down" ng-hide="c.showDetails"></i>
    </a>
  </div>
  <hr />
  
  <!-- Error Alert -->
  <div class="alert alert-danger" ng-show="c.error">
    {{c.errorMessage}}
  </div>
  
  <!-- The row with all the information about the asset -->
  <div id="asset-details" class="asset-details collapse in" ng-show="c.showDetails">
    <div id="results" ng-show="c.loaded && !c.error">
      <div id="asset-details">
        <div class="asset-attr" ng-repeat="(key, value) in c.details">
          <div class="attr pull-left"><b>{{key}}</b></div> 
          <div class="attr pull-right">{{value}}</div>
        </div>
        <!---<a ng-href="{{c.url}}" target="_blank">View More</a> -->
        <div class="col-xs-8 col-xs-offset-2 more-details-button">
          <a href="{{c.url}}" class="btn btn-default center-block">
            VIEW MORE DETAILS
          </a>
        </div>
      </div>
    </div>
  </div>
  <div class="spinner" ng-show="!c.loaded">
    <i class="fa fa-spinner fa-4x fa-pulse"></i>
  </div>
    <!-- The row with all the lists of stuffs -->
  <div class="asset-lists">
    <ul class="nav nav-tabs todo-nav">
      <li class="active col-xs-4 todo-tab">
        <a data-toggle="tab" href="#todo">To Do Items</a>
      </li>
      <li class="col-xs-4 todo-tab">
        <a data-toggle="tab" href="#completedTodo">Completed Tasks</a>
      </li>
      <li class="col-xs-4 todo-tab">
        <a data-toggle="tab" href="#openRequest">Open Requests</a>
      </li>
    </ul>
    <div class="tab-content">

      <!-- This is the todo tab content -->
      <div id="todo" class="tab-pane fade in active">
        <h6>
          Click Scan to complete the task.  Click Skip to move to the next task.
        </h6>
        <a href="#" class="todo-list" ng-repeat="todo in c.todos | filter:{state:'1'} | orderBy: todo.order" 
           ng-class="{'disabled disabled-text': todo.state == '3', 'disabled disabled-text-red': todo.state == '7'}">
          <div class="row todo-list-container">
            <div class="col-xs-1 todo-list-icon-container todo-number" ng-click="c.scanTodo(todo)">
              <span>{{$index + 1}}.</span>
            </div>
            <div class="col-xs-7 todo-container" ng-click="c.scanTodo(todo)">
              <div class="row">
                <div class="col-xs-12 todo-type">
                  {{todo.type}}
                </div>
              </div>
              <div class="row">
                <div class="col-xs-12">
                  {{todo.shortDescription}}
                </div>
              </div>
            </div>
            <div class="col-xs-2 todo-list-icon-container to-do-items">
              <button class="btn btn-primary" ng-click="c.scanTodo()" ng-if="todo.type != 'Freeform'">
                SCAN
              </button>
              <button class="btn btn-primary" ng-click="c.markSkipped(todo.sysId)" ng-if="todo.type == 'Freeform'">
                DONE
              </button>
            </div>
            <div class="col-xs-1 todo-list-icon-container to-do-items">
              <button class="btn btn-default" ng-click="c.markSkipped(todo.sysId)">
                SKIP
              </button>
            </div>
          </div> 
        </a>
        <button class="btn btn-default col-xs-12 todo-freeform-btn" ng-click="c.showFreeformForm()" ng-hide="c.freeformClicked">
          <div class="col-xs-10 todo-freeform-btn-text">
            Add Custom Task
          </div>
          <div class="col-xs-2 todo-green-plus">
            <i class="glyphicon glyphicon-plus"></i>
          </div>
        </button>
        <div ng-show="c.freeformClicked" class="form-group freeform-container">
          		<textarea class="form-control" ng-model="c.freeformText" placeholder="Enter your custom task description here..." maxlength="160" rows="3" autofocus></textarea>
            	<button class="btn btn-primary freeform-submit" type="submit" ng-click="c.freeformSubmit(c.freeformText)">SUBMIT</button>
        </div>
      </div>
        
      <!-- This is the completed todo tab content-->
      <div id="completedTodo" class="list-group tab-pane fade">
        <a href="#" class="list-group-item todo-list" ng-repeat="todo in c.todos | filter:{state:'!1'} | orderBy: todo.order" 
           ng-class="{'disabled disabled-text': todo.state == '3', 'disabled disabled-text-red': todo.state == '7'}">
          <div class="row todo-list-container">
            <div class="col-xs-1 todo-list-icon-container" ng-click="c.scanTodo(todo)">
              <i ng-class="{'glyphicon glyphicon-check completed-icon': todo.state == '7'}"></i>
            </div> 
            <div class="col-xs-9" ng-click="c.scanTodo(todo)">
              <div class="row">
                <div class="col-xs-12 ">
                  {{todo.type}}
                </div>
              </div>
              <div class="row">
                <div class="col-xs-12">
                  {{todo.shortDescription}}
                </div>
              </div>
            </div>
            <div class="col-xs-1 todo-list-icon-container" ng-click="c.markSkipped(todo.sysId)">
              <i ng-class="{'glyphicon glyphicon-remove text-danger': todo.state !== '3' && todo.state !== '7'}"></i>
            </div>
          </div> 
        </a>
      </div>

      <!-- Open request tab content -->
      <div id="openRequest" class="tab-pane fade">
        <div class="request-block col-xs-12" ng-repeat="request in c.requests">
          <div class="row">
            <div class="col-xs-12 request-number">
              {{request.details.RITM}}
            </div>
          </div>
          <div class="row requests-details">
            <div class="col-xs-8">
              <div class="row">
                <span class="col-xs-6 request-title">
                  Type:
                </span>
                <span class="col-xs-6">
                  {{request.details.Type}}
                </span>
              </div>
              <div class="row">
                <span class="col-xs-6 request-title">
                  Stage:
                </span>
                <span class="col-xs-6">
                 	{{request.details.Stage}}
                </span>
              </div>
              <div class="row">
                <span class="col-xs-6 request-title">
                  Data Reclamation:
                </span>
                <span class="col-xs-6">
                 	{{request.details['Data Reclamation']}}
                </span>
              </div>
            </div>
            <div class="col-xs-4">
              <a href="{{request.url}}" class="btn btn-default center-block">
                DETAILS
              </a>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>
<!---   <button ng-show="c.loaded" class="btn btn-primary -align--stretch" ng-click="c.navigate('asset_scan')">Back to Scan
<button ng-show="c.loaded" class="btn btn-primary -align--stretch" ng-click="c.binScan()">Scan Bin</button>
<button ng-show="c.loaded" class="btn btn-primary -align--stretch" ng-click="c.binScan()">Manually Enter Bin</button></button> -->
]]></template>
    </sp_widget>
</record_update>
