<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($location, $http, cabrillo, spModal) {
  /* widget controller */
  var c = this;
  c.loaded = false;
	c.requestsLoaded = false;
	c.showDetails = true;
	c.freeformClicked = false;
	c.freeformOrderClicked = false;
	c.maxLength = 160;
	c.noItems = false;
	c.freeformText = '';
	c.freeformScan = false;
	c.assetSysId = '';
	
	c.createPDF = function(){
		html2canvas(document.getElementById('barcodePrintPreview'), {
			onrendered: function (canvas) {
				var data = canvas.toDataURL();
				var docDefinition = {
					content: [{
						image: data,
						width: 500
					}]
				};
				pdfMake.createPdf(docDefinition).download("barcodePreview.pdf");
			}
		});
	};
	
  c.ASSET_KEY_MAP = {
    'modelCategory': 'Model Category',
    'model': 'Model',
		'acquisitionCountry': 'Acquisition Country',
    'assetType': 'Asset Type',
    'retirementDate': 'Retirement Date',
		'assignedTo': 'Assigned To',
		'assignedToIsVIP': 'Assigned to VIP',
		'state': 'State',
		'stockroom': 'Bin'
  };

	c.ITEM_KEY_MAP = {
		'itemNumber': 'RITM',
		'item': 'Type',
		'stage': 'Stage',
		'dataReclamation': 'Data Reclamation'
	};
	
	c.viewAsset = function(){
		spModal.open({
			title: "Asset",
			widget: "fd1f4ec347730200ba13a5554ee490c0",
			widgetInput:{
				table: "alm_asset",
				sys_id: c.assetSysId,
				view: 'Default'
			},
			size: "lg"
		});
	}
	
	c.closeBox = function(event){
		var target = event.target || event.srcElement;
		if (target.id == "freeformAdd" ||
				target.id == "freeformPlusContainer" ||
				target.id == "freeformPlusIcon") {
			c.freeformClicked = true;
		} else if (target.id != "freeformTextarea" &&
							 target.id != "freeformButton" &&
							 target.id != "freeformCheckbox" &&
							 target.id != "freeformLabel") {
			c.freeformClicked = false;
		}
	}

  c.getParameterByName = function(param) {
	   return $location.search()[param];
  };
	
  c.navigate = function(link) {
	  window.location.href = link;
  };
	
	c.toggleDetails = function(){
		if(c.showDetails){
			c.showDetails = false;
		}else{
			c.showDetails = true;
		}
	};
  
  c.getAsset = function(serial){
	    c.loaded = false;
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/GetAssetInfo/' + serial,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.assetSysId = response.data.result.sysId;
				getTodoList(response.data.result.sysId);
				c.transformData(response.data.result);
				c.error = false;
				c.loaded = true;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this serial number. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	};
  
  c.transformData = function(data) {
	  c.image = data.modelImage;
		c.sysId = data.sysId;
	  c.url = data.url;
	  c.details = c.mapProperties(data, c.ASSET_KEY_MAP);
  };
	
  c.mapProperties = function(obj, mapping) {
	Object.keys(obj)
      .forEach(function(key) {
        var newKey = mapping[key];
        if (typeof(newKey) != 'undefined')
          obj[newKey] = obj[key];
        delete(obj[key]);
      });
    return obj;
  };
	
	//Click the number to change the order of the freeform todos
	c.orderFreeformTodos = function(todo){
		if (todo.state == '7') { 
			console.log('clicked');
			c.freeformOrderClicked = true;
		}

	};
	
	//Click the todo list item and bring up the camera to scan the stockroom
	c.scanTodo = function(todo){
		if (todo.state == '1'){
			cabrillo.camera.getBarcode().then(function(barcode) {
				if (barcode){
					c.showBinResults = true;
					c.showBinButtons = false;
					updateStockroom(c.assetSysId, todo.sysId, barcode);
				}else{
					c.error = true;
					c.errorMessage = "Try Again";
				}
			}, function(error) {
				c.error = true;
				c.errorMessage = "Unable to scan.";
			})
		}
	};
	
	c.markSkipped = function(todoSysId){
		skipTodo(todoSysId);
		c.showBinResults = true;
		c.showForm = false;
		c.showBinButtons = false;
	};
	
	c.showFreeformForm = function() {
		c.freeformClicked = true;
	};
	
	c.freeformSubmit = function(shortDescription) {
		if (shortDescription.length > 160) {
			c.error = true;
			c.shortDescriptionError = true;
			c.errorMessage = "Your description is too long.";
			return;
		} 
		
		if (shortDescription.trim().length === 0) {
			c.error = true;
			c.shortDescriptionError = true;
			c.errorMessage = "Please enter a description.";
			return;
		} 
		
		c.freeformText = '';
		c.freeformClicked = false;
		c.shortDescriptionError = false;
		c.error = false;
		createTodo(shortDescription);
	};
	
	c.getRequestedItems = function(){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getAssetRequestedItems/' + c.assetSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			console.log(response);
			if(response.statusText === 'OK'){
				var data = response.data.result;
				c.requests = data.map(function(item) {
					var request = {};
					request.url = item.url;
					request.sysId = item.sysId;
					request.details = c.mapProperties(item, c.ITEM_KEY_MAP);
					c.requestsLoaded = true;
					return request;
				});
			}
		},
		function(data){
			c.noItems = true;
			console.log(data);
		})
	}
	
	function getTodoList(sysId){
		$http({
			method: 'get',
			url: '/api/x_gege9_asset_scan/asset_scanner/getToDoList/' + sysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.openTodos = response.data.result.filter(function(todo){
					return todo.state == '1';
				});
				c.completedTodos = response.data.result.filter(function(todo){
					return todo.state != '1';
				});
				c.error = false;
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo list. Try entering manually.";
			c.error = true;
		});
	}
	
	c.createNoRequestTodos = function(){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/' + c.assetSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				getTodoList(c.assetSysId);
			}
		});
	}
	
	function updateStockroom(assetSysId, todoSysId, stockroom){
	    c.loaded = false;
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/updateStockroom/' + assetSysId + '/' + stockroom,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.stockroomData = response.data.result;
				c.stockroomSysId = response.data.result.sysId;
				c.error = false;
				c.loaded = true;
				c.completeTodo(todoSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
				c.loaded = true;
			}
		}, function(response){
			c.errorMessage = "Unable to find this stockroom. Try entering manually.";
			c.error = true;
			c.loaded = true;
		});
	}
	
	c.completeTodo = function(todoSysId){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/completeToDo/' + todoSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo item.";
			c.error = true;
		});
	}
	
	c.markLegalHold = function(todoSysId){
		var legalHold = 'true';
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/' + c.assetSysId + '/' + legalHold,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.completeTodo(todoSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.errorMessage = "Unable to update Legal Hold.";
			c.error = true;
		});
	}
	
	function skipTodo(todoSysId){
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/skipToDo/' + todoSysId,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo item.";
			c.error = true;
		});
	}
	
	//Create freeform todo
	function createTodo(shortDescription){
		console.log(c.freeformScan);
		$http({
			method: 'post',
			url: '/api/x_gege9_asset_scan/asset_scanner/createFreeForm/' +
				c.assetSysId + '/' + shortDescription + '/' + c.freeformScan,
			headers: {
				'Content-Type': 'application/json'
			}
		}).then(function(response){
			if(response.statusText === 'OK'){
				c.error = false;
				c.freeformDescription = '';
				c.freeformScan = false;
				getTodoList(c.assetSysId);
			}else{
				c.error = true;
				if(!!response.errorMessage){
					c.errorMessage = response.errorMessage;
				}
			}
		}, function(response){
			c.errorMessage = "Unable to find this todo list. Try entering manually.";
			c.error = true;
		});
	}
	
	// Client side access to camera scan
	c.binScanPage = function(){
			window.location.href = 'asset_scan?id=bin_scan&sys_id=' + c.sysId;
	};
  
	
  c.serial_no = c.getParameterByName('serial_no');
  c.getAsset(c.serial_no);
}]]></client_script>
        <controller_as>c</controller_as>
        <css>
#content {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 100%;
  //max-width: 720px;
  margin: 0 auto;
  padding: 0px 5px 70px 5px;
}

.error-message {
  z-index: 999;
  margin-top: 10px;
  position: absolute;
}

#results {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: 0px 10px;
}

#asset-details {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: 100%;
  margin-bottom: 10px;
}

.more-details-button {
 margin: 10px 0; 
}

#confirm {
  background-color: #00bf6f; 
}

#reject {
  background-color: red; 
}

table {
 table-layout: fixed;
}

th, td {
  word-wrap: break-word; 
}

th.-v-align--middle {
  vertical-align: middle; 
}

input {
  margin-bottom: 10px; 
}

h5 {
  color: black;
  font-weight: 600;
  margin: 5px 0px;
}

hr {
  width: 100% !important; 
  height: 1px;
  background-color: rgb(200, 200, 200);
  margin: 10px;
}

#todo {
 padding: 5px; 
}

.barcode-row {
  width: 100%;
  display: flex;
}

.barcode {
	display: flex;
  justify-content: flex-start;
  flex-direction: column;
  margin-top: 10px;
}

.barcode-label {
	font-size: 12px;
}

.barcode-number {
	font-size: 26px;
  color: #000;
}

.asset-image {
	display: flex;
  align-self: center;
  margin: 0 auto;
}

.details-toggle {
  display: flex;
  //text-align: right;
  //align-items: baseline;
  //vertical-align: center;
  //float: right;
  font-size: 24px;
  align-self: flex-end;
  margin-bottom: 3px;
}

.spinner {
  text-align: center;
  padding: 24px;
}

.asset-details {
  width: 100%;
  display: flex;
	flex-direction: column;
  flex: 1;
  justify-content: space-around;
}

.asset-lists {
  width: 100%;
	display: flex;
  flex-direction: column;
}

.asset-attr {
  display: flex;
  margin: 5px 10px;
}

.capitalize {
  text-transform: capitalize;
}

.attr {
  flex: 1 1 50%; 
}

.-align--center {
  align-self: center; 
}

.-align--stretch {
  align-self: stretch;
}

.accept-reject-button {
  width: 40%;
}

button #reject {
  background-color: red; 
}

button #confirm {
  background-color: green;
}

.todo-nav {
  font-size: 12px;
  text-align: center;
}

.todo-tab {
 padding: 0; 
}

.disabled-text, .disabled-text:hover {
  color: #A9A9A9;
  background-color: #ffffff;
}

.todo-list-container {
	display: flex;
  align-items: center;
  color: #717171;
  padding-bottom: 10px;
}

.todo-scan {
  padding-left: 0;
}

.todo-list-icon-container {
  text-align: center;
}

.to-do-items {
  padding-left: 0;
}

.todo-list {
  background-color: #ffffff;
}

.todo-number {
	align-self: flex-start; 
}

.todo-freeform-btn {
	padding: 0;
  height: 50px;
  margin: 25px 0;
}

.todo-freeform-btn-text {
	padding: 12px 0;
  font-size: 18px;
}

.todo-green-plus {
  padding: 12px 0;
  font-size: 18px;
	background-color: #1ed760;
  height: 100%;
  overflow: hidden;
  color: #fff;
}

.checkbox {
	margin: 0 0 0 15px;
}

.todo-type {
	font-weight: bold;
}

.wordbreak {
	word-break: break-word; 
  hyphen: auto;
}

.freeform-container {
  display: flex;
  float: left;
  width: 100%;
  margin: 20px 0;
}
textarea {
 border: 1px solid #ccc; 
 border-radius: 5px 0px 0px 5px;
 height: 50px;
 //margin-bottom: 5px;
 resize: none;
 vertical-align: top;
 width: 79.75%;
 margin: 0 0 0 15px;
}

.has-error {
	border: 1px solid red !important; 
}

.freeform-submit {
 height: 50px;
 vertical-align: top;
 width: 16%;
 border-radius: 0px 5px 5px 0px; 
 padding: 0;
 background-color: #1ed760;
 color: #ffffff;
 margin: 0 0 0 0;
}

//Completed Tab
#completedTodo {
  padding-top: 5px;
}

.icon-key {
  background-color: #eeeeee; 
  max-width: 100%;
  padding: 3px 0;
  margin: 0 auto;
}

.icon-key img {
 	max-width: 50px; 
}

//Requests Tab
.no-requests {
	padding: 10px;  
}

.request-block {
	padding: 15px 20px;
}

.request-number {
	padding: 0 0 10px 0;
  font-size: 16px;
  font-weight: bold;
}

.request-title {
	font-weight: bold;
}

.requests-details {
  display: flex;
  align-items: center;
}

.bottom-nav {
	background-color: #fff;
  border-top: 1px solid #ccc;
  height: 60px;
}

.bottom-nav ul {
	padding: 0;
}

.bottom-nav li {
	padding: 0;
}

.home-menu {
  position: absolute;
  bottom: 0;
}

.navbar-nav {
  margin: 0 !important;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>scanned-information</id>
        <internal>false</internal>
        <link/>
        <name>Scanned Information</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.userSkills = [];
	var thisUser = gs.getUserID();
	gs.info(thisUser);
	var userSkillGR = new GlideRecord('sys_user_has_skill');
	userSkillGR.addQuery('active', true);
	userSkillGR.addQuery('user', thisUser);
	userSkillGR.query();
	gs.info('test');
	while(userSkillGR.next()){
		gs.info('test');
		data.userSkills.push({
			sys_id: userSkillGR.skill.toString(),
			name: userSkillGR.skill.name.toString()
		});
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>212613005</sys_created_by>
        <sys_created_on>2018-04-18 15:36:31</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e4b1ee29dbe11b00d087d8965e96193e</sys_id>
        <sys_mod_count>1106</sys_mod_count>
        <sys_name>Scanned Information</sys_name>
        <sys_package display_value="Asset Scanning" source="x_gege9_asset_scan">7be151dddbe55700d087d8965e9619c8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Asset Scanning">7be151dddbe55700d087d8965e9619c8</sys_scope>
        <sys_update_name>sp_widget_e4b1ee29dbe11b00d087d8965e96193e</sys_update_name>
        <sys_updated_by>212607632</sys_updated_by>
        <sys_updated_on>2018-05-16 09:29:03</sys_updated_on>
        <template><![CDATA[<div id="content" ng-click="c.closeBox($event)">
  <!-- The row with barcode and toggle -->
  <div class="barcode-row">
    <div class="barcode">
      <span class="barcode-label">Barcode Information</span>
      <span class="barcode-number">{{c.serial_no.toUpperCase()}}</span>
    </div>
    <img class="img img-responsive asset-image" width="65" height="65"
         ng-src="{{c.image}}" />
    <a href="#asset-details" ng-click="c.toggleDetails()" class="details-toggle">
      <i class="glyphicon glyphicon-chevron-up" ng-show="c.showDetails"></i>
      <i class="glyphicon glyphicon-chevron-down" ng-hide="c.showDetails"></i>
    </a>
  </div>
  <hr />
  
  <!-- Error Alert -->
  <div class="alert alert-danger error-message" ng-show="c.error">
    {{c.errorMessage}}
  </div>

  <div class="col-xs-6 more-details-button">
    <!--<a ng-href="alm_hardware.do?sys_id={{c.assetSysId}}" class="btn btn-primary btn-sm center-block">
      VIEW ASSET RECORD
    </a>-->
    <button ng-click="c.viewAsset()" class="btn btn-default btn-sm center-block">
      VIEW ASSET RECORD
    </button>
  </div>

  <!-- The row with all the information about the asset -->
  <div id="asset-details" class="asset-details collapse in" ng-show="c.showDetails">
    <div id="results" ng-show="c.loaded">
      <div id="asset-details">
        <div class="asset-attr"> 
          <div class="attr pull-left"><b>State</b></div> 
          <div class="attr pull-right">{{c.details["State"]}}</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Bin</b></div> 
          <div class="attr pull-right" ng-hide="c.details['Bin'] == ''">{{c.details["Bin"]}}</div>
          <div class="attr pull-right" ng-show="c.details['Bin'] == ''">This asset is not assigned to a bin.</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Model Category</b></div> 
          <div class="attr pull-right">{{c.details["Model Category"]}}</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Model</b></div> 
          <div class="attr pull-right">{{c.details["Model"]}}</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Acquisition Country</b></div> 
          <div class="attr pull-right" ng-hide="c.details['Acquisition Country'] == ''">{{c.details["Acquisition Country"]}}</div>
          <div class="attr pull-right" ng-show="c.details['Acquisition Country'] == ''">This asset is not assigned to a country.</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Asset Type</b></div> 
          <div class="attr pull-right capitalize">{{c.details["Asset Type"]}}</div>
        </div>
       	<div class="asset-attr">    
          <div class="attr pull-left"><b>Retirement Date</b></div> 
          <div class="attr pull-right">{{c.details["Retirement Date"]}}</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Assigned to</b></div> 
          <div class="attr pull-right" ng-hide="c.details['Assigned To'] == ''">{{c.details["Assigned To"]}}</div>
          <div class="attr pull-right" ng-show="c.details['Assigned To'] == ''">This asset is not assigned.</div>
        </div>
        <div class="asset-attr">    
          <div class="attr pull-left"><b>Assigned to VIP</b></div> 
          <div class="attr pull-right capitalize">{{c.details["Assigned to VIP"]}}</div>
        </div>
      </div>
    </div>
  </div>
  <div class="spinner" ng-show="!c.loaded">
    <i class="fa fa-spinner fa-4x fa-pulse"></i>
  </div>
    <!-- The row with all the lists of stuffs -->
  <div class="asset-lists">
    <ul class="nav nav-tabs todo-nav">
      <li class="active col-xs-4 todo-tab">
        <a data-toggle="tab" href="#todo">To Do Items</a>
      </li>
      <li class="col-xs-4 todo-tab">
        <a data-toggle="tab" href="#completedTodo">To Do History</a>
      </li>
      <li class="col-xs-4 todo-tab">
        <a data-toggle="tab" href="#openRequest" ng-click="c.getRequestedItems()">Open Requests</a>
      </li>
    </ul>
    <div class="tab-content">

      <!-- This is the todo tab content -->
      <div id="todo" class="tab-pane fade in active">
        
        <div ng-show="c.openTodos.length === 0">
          <h6>
            There are no to do items for this Asset. This is probably because it was sent without
            opening a request or the request was created before this app. Click the button below 
            to generate a list of to do items to receive it in to the depot.
          </h6>
          <button class="btn btn-primary center-block" ng-click="c.createNoRequestTodos()">
            Generate To Do List
          </button>
        </div>
        
        <div ng-show="c.openTodos.length > 0">
          <h6>
            Click Scan/Done to complete the task.  Click Skip to move to the next task.
          </h6>
          <div class="todo-list" ng-repeat="todo in c.openTodos | orderBy: todo.order"
             ng-class="{'disabled disabled-text': todo.state == '3', 'disabled disabled-text-red': todo.state == '7'}">
            <div class="row todo-list-container">
              <div class="col-xs-1 todo-list-icon-container todo-number" ng-dblclick="c.orderFreeformTodos(todo)">
                <span ng-hide="c.freeformOrderClicked" >{{$index + 1}}.</span>
                <input ng-show="c.freeformOrderClicked" width="15" />
              </div>
              <div class="col-xs-7 todo-container">
                <div class="row">
                  <div class="col-xs-12 todo-type">
                    {{todo.type}}
                  </div>
                </div>
                <div class="row">
                  <div class="col-xs-12 wordbreak">
                    {{todo.shortDescription}}
                  </div>
                </div>
              </div>
              <div class="col-xs-2 todo-list-icon-container to-do-items">
                <button class="btn btn-primary" ng-click="c.scanTodo(todo)" 
                        ng-if="todo.type != 'Freeform' && todo.type != 'Investigate' && todo.type != 'Check Legal Hold'">
                  SCAN
                </button>
                <button class="btn btn-primary" ng-click="c.completeTodo(todo.sysId)" 
                        ng-if="todo.type == 'Freeform' || todo.type == 'Investigate'">
                  DONE
                </button>
               	<button class="btn btn-primary" ng-click="c.markLegalHold(todo.sysId)" 
                        ng-if="todo.type == 'Check Legal Hold'">
                  HOLD
                </button>
              </div>
              <div class="col-xs-1 todo-list-icon-container to-do-items">
                <button class="btn btn-default" ng-click="c.markSkipped(todo.sysId)">
                  SKIP
                </button>
              </div>
            </div> 
          </div>
          <button class="btn btn-default col-xs-12 todo-freeform-btn" ng-click="c.showFreeformForm()" ng-hide="c.freeformClicked">
          <div id="freeformAdd" class="col-xs-10 todo-freeform-btn-text">
            Add Custom Task
          </div>
          <div id="freeformPlusContainer" class="col-xs-2 todo-green-plus">
            <i  id="freeformPlusIcon" class="glyphicon glyphicon-plus"></i>
          </div>
        </button>
        <div class="col-xs-12 todo-freeform-btn" ng-show="c.freeformClicked">
          <div class="row">
          	<textarea id="freeformTextarea" class="form-control col-xs-10" ng-class="{'has-error' : c.shortDescriptionError == true }" 
                      ng-model="c.freeformText" placeholder="Enter your custom task description here..." maxlength="160" rows="3" autofocus></textarea>
          	<button id="freeformButton" class="btn freeform-submit col-xs-2" type="submit" ng-click="c.freeformSubmit(c.freeformText)">SUBMIT</button>
          </div>
          <div class="row">
            <div class="checkbox">
              <label id="freeformLabel">
                <input id="freeformCheckbox" type="checkbox" ng-model="c.freeformScan"
                       ng-true-value="true" ng-false-value="false"/>Task requires a scan to new bin.</label>
            </div>
          </div>
        </div>
        </div>
      </div>
        
      <!-- This is the completed todo tab content-->
      <div id="completedTodo" class="list-group tab-pane fade">
        <div ng-hide="c.completedTodos.length > 0">
          There is no task history.
        </div>
        <div ng-show="c.completedTodos.length > 0" class="row icon-key">
          <div class="text-center col-xs-3">
            Icon Key: 
          </div>
          <div class="text-center col-xs-2">
            <img src="skip.svg" /> 
          </div>
          <span class="text-center col-xs-2">Skipped Task</span>
          <div class="text-center col-xs-2">
            <img src="completed.svg" />
          </div>
          <span class="text-center col-xs-2">Completed Task</span>
        </div>

        <div class="list-group-item todo-list" ng-repeat="todo in c.completedTodos | filter:{state:'!1'} | orderBy : '-lastUpdate'"
           ng-class="{'disabled disabled-text': todo.state == '3' || todo.state == '7'}" >
          <div class="row todo-list-container">
            <div class="col-xs-2">
              <div ng-if="todo.state== '3'">
                <img src="completed.svg" />
              </div>
              <div ng-if="todo.state== '7'">
                <img src="skip.svg" />
              </div>
            </div>
            <div class="col-xs-9">
              <div class="row">
                <div class="col-xs-12">
                  {{todo.type}}
                </div>
              </div>
              <div class="row">
                <div class="col-xs-12">
                  {{todo.shortDescription}}
                </div>
              </div>
            </div>
            <div class="col-xs-1 todo-list-icon-container">
              <i ng-class="{'glyphicon glyphicon-remove text-danger': todo.state !== '3' && todo.state !== '7'}"></i>
            </div>
          </div> 
        </div>
      </div>

      <!-- Open request tab content -->
      <div id="openRequest" class="tab-pane fade">
        <div class="spinner" ng-hide="c.noItems || c.requestsLoaded">
          <i class="fa fa-spinner fa-4x fa-pulse"></i>
        </div>
        <div class="no-requests" ng-show="c.noItems">
          <p>
            There are no open requests.
          </p>
        </div>
        <div class="request-block col-xs-12" ng-repeat="request in c.requests">
          <div class="row">
            <div class="col-xs-12 request-number">
              {{request.details.RITM}}
            </div>
          </div>
          <div class="row requests-details">
            <div class="col-xs-8">
              <div class="row">
                <span class="col-xs-6 request-title">
                  Type:
                </span>
                <span class="col-xs-6">
                  {{request.details.Type}}
                </span>
              </div>
              <div class="row">
                <span class="col-xs-6 request-title">
                  Stage:
                </span>
                <span class="col-xs-6">
                 	{{request.details.Stage}}
                </span>
              </div>
              <div class="row">
                <span class="col-xs-6 request-title">
                  Data Reclamation:
                </span>
                <span class="col-xs-6">
                 	{{request.details['Data Reclamation']}}
                </span>
              </div>
            </div>
            <div class="col-xs-4">
              <a href="{{request.url}}" class="btn btn-default center-block">
                DETAILS
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="navbar navbar-fixed-bottom bottom-nav">
    <div class="container-fluid">
      <ul class="nav navbar-nav col-xs-12">
        <li class="text-center center-block col-xs-12">
          <a href="/asset_scan"><i class="glyphicon glyphicon-home"></i>
            <p>
          		Home
            </p>
          </a>
        </li>
      </ul>
    </div>
     <!--<button ng-show="c.loaded" class="col-xs-12 btn btn-primary" ng-click="c.navigate('asset_scan')">Back to Scan</button>-->
  </div>
</div>
<!-- <button ng-show="c.loaded" class="btn btn-primary -align--stretch" ng-click="c.binScan()">Scan Bin</button>
<button ng-show="c.loaded" class="btn btn-primary -align--stretch" ng-click="c.binScan()">Manually Enter Bin</button></button> -->

<script>
</script>
]]></template>
    </sp_widget>
</record_update>
